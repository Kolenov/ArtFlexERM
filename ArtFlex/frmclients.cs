/*
* ++++++++++++++++++++++++++++++++++++++++++++++++++
* This code is generated by a tool and is provided "as is", without warranty of any kind,
* express or implied, including but not limited to the warranties of merchantability,
* fitness for a particular purpose and non-infringement.
* In no event shall the authors or copyright holders be liable for any claim, damages or
* other liability, whether in an action of contract, tort or otherwise, arising from,
* out of or in connection with the software or the use or other dealings in the software.
* ++++++++++++++++++++++++++++++++++++++++++++++++++
* */

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using MySql.Data.MySqlClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity;

namespace ArtFlex
{
	public partial class frmclients : Form
	{
		private ModelArtFlexEntities ctx;
		
		public frmclients()
		{
			InitializeComponent();
		}
		
		private void frmclients_Load(object sender, EventArgs e)
		{
			ctx = new ModelArtFlexEntities();
			ctx.clients.Load();
			BindingList<clients> _entities = ctx.clients.Local.ToBindingList();
			clientsBindingSource.DataSource = _entities;
			this.client_idTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.clientsBindingSource, "client_id", true ));
			this.client_nameTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.clientsBindingSource, "client_name", true ));
			this.client_surnameTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.clientsBindingSource, "client_surname", true ));
			this.client_jobtitleTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.clientsBindingSource, "client_jobtitle", true ));
			this.client_organisationTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.clientsBindingSource, "client_organisation", true ));
			this.client_emailTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.clientsBindingSource, "client_email", true ));
			this.client_wphoneTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.clientsBindingSource, "client_wphone", true ));
			this.client_faxTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.clientsBindingSource, "client_fax", true ));
			this.client_skipeTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.clientsBindingSource, "client_skipe", true ));
			this.client_addressTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.clientsBindingSource, "client_address", true ));
			this.client_descriptionTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.clientsBindingSource, "client_description", true ));
			
		}
		
		private void Save_Click(object sender, EventArgs e)
		{
			if (!this.Validate()) return;
			clientsBindingSource.EndEdit();
			ctx.SaveChanges();
			
		}
		
		private void frmclients_FormClosing(object sender, FormClosingEventArgs e)
		{
			e.Cancel = false;
		}
		
		private void client_idTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( client_idTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( client_idTextBox, "The field client_id is required" ); 
			}
			int v;
			string s = client_idTextBox.Text;
			if( !int.TryParse( s, out v ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( client_idTextBox, "The field client_id must be int." );
			}
			if( !e.Cancel ) { errorProvider1.SetError( client_idTextBox, "" ); } 
		}
		
		private void client_nameTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( client_nameTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( client_nameTextBox, "The field client_name is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( client_nameTextBox, "" ); } 
		}
		
		private void client_surnameTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( client_surnameTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( client_surnameTextBox, "The field client_surname is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( client_surnameTextBox, "" ); } 
		}
		
		private void client_jobtitleTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( client_jobtitleTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( client_jobtitleTextBox, "The field client_jobtitle is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( client_jobtitleTextBox, "" ); } 
		}
		
		private void client_organisationTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( client_organisationTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( client_organisationTextBox, "The field client_organisation is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( client_organisationTextBox, "" ); } 
		}
		
		private void client_emailTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( client_emailTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( client_emailTextBox, "The field client_email is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( client_emailTextBox, "" ); } 
		}
		
		private void client_wphoneTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( client_wphoneTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( client_wphoneTextBox, "The field client_wphone is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( client_wphoneTextBox, "" ); } 
		}
		
		private void client_faxTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( client_faxTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( client_faxTextBox, "The field client_fax is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( client_faxTextBox, "" ); } 
		}
		
		private void client_skipeTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( client_skipeTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( client_skipeTextBox, "The field client_skipe is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( client_skipeTextBox, "" ); } 
		}
		
		private void client_addressTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( client_addressTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( client_addressTextBox, "The field client_address is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( client_addressTextBox, "" ); } 
		}
		
		private void client_descriptionTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( client_descriptionTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( client_descriptionTextBox, "The field client_description is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( client_descriptionTextBox, "" ); } 
		}
		
		
		
		
		private void bindingNavigatorAddNewItem_Click(object sender, EventArgs e)
		{
			clientsBindingSource.AddNew();
		}
	}
}
