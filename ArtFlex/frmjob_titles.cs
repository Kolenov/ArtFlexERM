/*
* ++++++++++++++++++++++++++++++++++++++++++++++++++
* This code is generated by a tool and is provided "as is", without warranty of any kind,
* express or implied, including but not limited to the warranties of merchantability,
* fitness for a particular purpose and non-infringement.
* In no event shall the authors or copyright holders be liable for any claim, damages or
* other liability, whether in an action of contract, tort or otherwise, arising from,
* out of or in connection with the software or the use or other dealings in the software.
* ++++++++++++++++++++++++++++++++++++++++++++++++++
* */

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using MySql.Data.MySqlClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity;
using MySqlDB;

namespace ArtFlex
{
	public partial class frmjob_titles : Form
	{
		private ModelEntities context;
		
		public frmjob_titles()
		{
			InitializeComponent();
		}
		
		private void frmjob_titles_Load(object sender, EventArgs e)
		{
			context = new ModelEntities();
			context.job_titles.Load();
			BindingList<job_titles> _entities = context.job_titles.Local.ToBindingList();
			job_titlesBindingSource.DataSource = _entities;
			this.jobtitle_idTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.job_titlesBindingSource, "jobtitle_id", true ));
			this.jobtitle_nameTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.job_titlesBindingSource, "jobtitle_name", true ));
			this.jobtitle_descriptTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.job_titlesBindingSource, "jobtitle_descript", true ));
			
		}
		
		private void Save_Click(object sender, EventArgs e)
		{
			if (!this.Validate()) return;
			job_titlesBindingSource.EndEdit();
			context.SaveChanges();
			
		}
		
		private void frmjob_titles_FormClosing(object sender, FormClosingEventArgs e)
		{
			e.Cancel = false;
		}
		
		private void jobtitle_idTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( jobtitle_idTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( jobtitle_idTextBox, "The field jobtitle_id is required" ); 
			}
			int v;
			string s = jobtitle_idTextBox.Text;
			if( !int.TryParse( s, out v ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( jobtitle_idTextBox, "The field jobtitle_id must be int." );
			}
			if( !e.Cancel ) { errorProvider1.SetError( jobtitle_idTextBox, "" ); } 
		}
		
		private void jobtitle_nameTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( jobtitle_nameTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( jobtitle_nameTextBox, "The field jobtitle_name is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( jobtitle_nameTextBox, "" ); } 
		}
		
		private void jobtitle_descriptTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( jobtitle_descriptTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( jobtitle_descriptTextBox, "The field jobtitle_descript is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( jobtitle_descriptTextBox, "" ); } 
		}
		
		
		
		
		private void bindingNavigatorAddNewItem_Click(object sender, EventArgs e)
		{
			job_titlesBindingSource.AddNew();
		}
	}
}
