/*
* ++++++++++++++++++++++++++++++++++++++++++++++++++
* This code is generated by a tool and is provided "as is", without warranty of any kind,
* express or implied, including but not limited to the warranties of merchantability,
* fitness for a particular purpose and non-infringement.
* In no event shall the authors or copyright holders be liable for any claim, damages or
* other liability, whether in an action of contract, tort or otherwise, arising from,
* out of or in connection with the software or the use or other dealings in the software.
* ++++++++++++++++++++++++++++++++++++++++++++++++++
* */

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using MySql.Data.MySqlClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity;

namespace ArtFlex
{
	public partial class frmrests : Form
	{
		private ModelArtFlexEntities ctx;
		
		public frmrests()
		{
			InitializeComponent();
		}
		
		private void frmrests_Load(object sender, EventArgs e)
		{
			ctx = new ModelArtFlexEntities();
			ctx.rests.Load();
			BindingList<rests> _entities = ctx.rests.Local.ToBindingList();
			restsBindingSource.DataSource = _entities;
			this.rest_idTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.restsBindingSource, "rest_id", true ));
			this.supply_id_comboBox.DataSource = ctx.supply.ToList();
			this.supply_id_comboBox.DisplayMember = "supply_id";
			this.supply_id_comboBox.ValueMember = "supply_id";
			this.supply_id_comboBox.DataBindings.Add(new System.Windows.Forms.Binding("SelectedValue", this.restsBindingSource, "supply_id", true));
			this.material_id_comboBox.DataSource = ctx.materials.ToList();
			this.material_id_comboBox.DisplayMember = "material_id";
			this.material_id_comboBox.ValueMember = "material_id";
			this.material_id_comboBox.DataBindings.Add(new System.Windows.Forms.Binding("SelectedValue", this.restsBindingSource, "material_id", true));
			this.rest_quantityTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.restsBindingSource, "rest_quantity", true ));
			this.rest_summTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.restsBindingSource, "rest_summ", true ));
			this.rest_date_dateTimePicker.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.restsBindingSource, "rest_date", true ));
			this.rest_createtimeTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.restsBindingSource, "rest_createtime", true ));
			
		}
		
		private void Save_Click(object sender, EventArgs e)
		{
			if (!this.Validate()) return;
			restsBindingSource.EndEdit();
			ctx.SaveChanges();
			
		}
		
		private void frmrests_FormClosing(object sender, FormClosingEventArgs e)
		{
			e.Cancel = false;
		}
		
		private void rest_idTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( rest_idTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( rest_idTextBox, "The field rest_id is required" ); 
			}
			int v;
			string s = rest_idTextBox.Text;
			if( !int.TryParse( s, out v ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( rest_idTextBox, "The field rest_id must be int." );
			}
			if( !e.Cancel ) { errorProvider1.SetError( rest_idTextBox, "" ); } 
		}
		
		private void supply_id_comboBox_Validating(object sender, CancelEventArgs e)
		{
			int i = supply_id_comboBox.SelectedIndex;
			e.Cancel = false;
			if( i == -1 )
			{
				e.Cancel = true; 
				errorProvider1.SetError(supply_id_comboBox, "Must select a supply_id");
			}
			if( !e.Cancel )
			{
				errorProvider1.SetError(supply_id_comboBox, "");
			}
		}
		private void material_id_comboBox_Validating(object sender, CancelEventArgs e)
		{
			int i = material_id_comboBox.SelectedIndex;
			e.Cancel = false;
			if( i == -1 )
			{
				e.Cancel = true; 
				errorProvider1.SetError(material_id_comboBox, "Must select a material_id");
			}
			if( !e.Cancel )
			{
				errorProvider1.SetError(material_id_comboBox, "");
			}
		}
		private void rest_quantityTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( rest_quantityTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( rest_quantityTextBox, "The field rest_quantity is required" ); 
			}
			double v;
			string s = rest_quantityTextBox.Text;
			if( !double.TryParse( s, out v ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( rest_quantityTextBox, "The field rest_quantity must be double." );
			}
			if( !e.Cancel ) { errorProvider1.SetError( rest_quantityTextBox, "" ); } 
		}
		
		private void rest_summTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( rest_summTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( rest_summTextBox, "The field rest_summ is required" ); 
			}
			double v;
			string s = rest_summTextBox.Text;
			if( !double.TryParse( s, out v ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( rest_summTextBox, "The field rest_summ must be double." );
			}
			if( !e.Cancel ) { errorProvider1.SetError( rest_summTextBox, "" ); } 
		}
		
		
		
		
		private void bindingNavigatorAddNewItem_Click(object sender, EventArgs e)
		{
			restsBindingSource.AddNew();
		}
	}
}
